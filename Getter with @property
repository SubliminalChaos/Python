# The @property decorator allows you to create a method
#     that is accessed like an attribute.
class Person:
    def __init__(self, first, last):
        self.first = first
        self.last = last

    @property
    def full_name(self):
        return f'{self.first} {self.last}'


geralt = Person('Geralt', 'of Rivia')

print(f'{geralt.first}')
print(f'{geralt.last}')
print(f'{geralt.full_name}')  # the @property hides that this is a method,
                              # behaves just like any attribute

